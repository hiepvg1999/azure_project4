{
	"name": "DF_Blob2Synapse",
	"properties": {
		"description": "Data flows to load the data from the data lake files into the Synapse Analytics data tables",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "BlobStorage_EmpMaster",
						"type": "DatasetReference"
					},
					"name": "EmployeeFile"
				},
				{
					"dataset": {
						"referenceName": "BlobStorage_TitleMaster",
						"type": "DatasetReference"
					},
					"name": "TitleFile"
				},
				{
					"dataset": {
						"referenceName": "BlobStorage_AgencyMaster",
						"type": "DatasetReference"
					},
					"name": "Agency"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Synapse_NYC_Payroll_EMP_MD",
						"type": "DatasetReference"
					},
					"name": "SynapseEMP"
				},
				{
					"dataset": {
						"referenceName": "Synapse_NYC_Payroll_TITLE_MD",
						"type": "DatasetReference"
					},
					"name": "SynapseTITLE"
				},
				{
					"dataset": {
						"referenceName": "Synapse_NYC_Payroll_AGENCY_MD",
						"type": "DatasetReference"
					},
					"name": "SynapseAGENCY"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          EmployeeID as integer,",
				"          LastName as string,",
				"          FirstName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> EmployeeFile",
				"source(output(",
				"          TitleCode as integer,",
				"          TitleDescription as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> TitleFile",
				"source(output(",
				"          AgencyID as short,",
				"          AgencyName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Agency",
				"EmployeeFile sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SynapseEMP",
				"TitleFile sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SynapseTITLE",
				"Agency sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SynapseAGENCY"
			]
		}
	}
}